import pygame.time

from music import *
from player import *
from sound import *
from ondate import *
from game import *

pygame.init()
pygame.mouse.set_visible(False)


def main():
    game = Game()

    LARGHEZZA = 1200
    ALTEZZA = 850

    MUOVI_ONDATA = pygame.USEREVENT + 1
    pygame.time.set_timer(MUOVI_ONDATA, game.movimento_ondata)

    SPARA_ALIENO = pygame.USEREVENT + 2
    pygame.time.set_timer(SPARA_ALIENO, game.spara_alieno)

    window = pygame.display.set_mode((LARGHEZZA, ALTEZZA))

    player = Player(x=LARGHEZZA // 2 - 45, y=ALTEZZA // 2 + 280, directory='assets', nome_file='player.png', scalax=80, scalay=70)

    ondate = Ondate()

    font_score = Font("comicsans", 60, "Score: ", (219, 216, 13))
    font_health = Font("comicsans", 60, "Vita: ", (219, 216, 13))
    font_lose = Font("comicsans", 90, "Hai Perso", (219, 216, 13))
    font_livelli = Font("comicsans", 60, "Livelli: ", (219, 216, 13))

    hit_sound = Sound('assets', 'hit_sound.mp3', 0.1)

    music = Music(0.7, True)

    while not game.esci:
        window.fill(color=(0, 0, 0))  # clear the screen with BLACK
        game.set_fps(60)  # set fps limit to (FPS)

        for event in pygame.event.get():  # check for new event
            if event.type == pygame.QUIT:
                pygame.mixer.stop()
                game.esci = True

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_SPACE:
                    player.add_bullet()

                if event.key == pygame.K_ESCAPE:
                    music.check_pause()

            if event.type == MUOVI_ONDATA:
                ondate.update_ondata_scudo()

            if event.type == SPARA_ALIENO:
                ondate.shoot(window)

        if game.lost:   # se hai perso
            game.draw_loser(font_lose, window, LARGHEZZA, ALTEZZA)

        player.move(LARGHEZZA)
        player.shoot(window)
        player.check_collision(ondate, font_score, game, hit_sound)

        ondate.check_collision(player, ALTEZZA, game)
        ondate.spawn_orda(font_livelli, game)

        player.draw(window)
        player.health(font_health, window, game)
        font_score.draw(window, 960, 15)
        font_livelli.draw(window, 965, 790)
        ondate.draw(window)

        pygame.display.update()

    pygame.quit()


if __name__ == '__main__':
    main()
